### API Path for Local.
@ApiTemplate.API_HostAddress = https://localhost:7070


###
################################## IDENTITY METHODS



### Register with 'Regular' user
POST {{ApiTemplate.API_HostAddress}}/register
Content-Type: application/json

{
  "email": "test1@ApiTemplate.site",
  "password": "TestPassword@1"
}

### Login with Cookies as 'Administrator' user
POST {{ApiTemplate.API_HostAddress}}/login?useCookies=true&useSessionCookies=true
Content-Type: application/json

{
  "email": "test1@ApiTemplate.site",
  "password": "TestPassword@1"
}


### Register with 'Administrator' user
POST {{ApiTemplate.API_HostAddress}}/register
Content-Type: application/json

{
  "email": "administrator@ApiTemplate.site",
  "password": "TestPassword@1"
}

### Login with Cookies as 'Regular' user
POST {{ApiTemplate.API_HostAddress}}/login?useCookies=true&useSessionCookies=true
Content-Type: application/json

{
  "email": "administrator@ApiTemplate.site",
  "password": "TestPassword@1"
}



### Logout
GET {{ApiTemplate.API_HostAddress}}/api/v1/account/logout
Content-Type: application/json



### Confirm Email Address. Pass userId and code as query parameters.
GET {{ApiTemplate.API_HostAddress}}/confirmEmail?userId=13d4bae0-11a1-4c77-8082-ab5bbb7b2f07&code=Q2ZESjhLZ2hIR0p5S0FGTWdoYW0wVWxSeCtIKzI1N1FUWmF4Ykx4cU9TVTZ2YklYNFdxSjBTVEpSNEJZbTBGaDVXaHo3RmhDSzhCazg0Y2prK0R3cVVsallTN1lLYU9sMHNDSkp2RVZ2M0ZSZXdseWI3M2pzVHhtTE1pcjFzaUcrbGdwV0cxTGRQMzJRSnNubm9vR2hJU2x5YlRIMk05N04vY21HdW1OU0pEam9ZMWIyZ0ZCNitnSXl1dUdzb3pUQnBDUkJuRUI4dDFxTkc4bmFPSFZYWE4zOVlRUCszZlBvUTJZSHF4ZitpaGxWTzUzMGY5QnhTRXFudnVnV1FZVENJSWRUUT09


### Resend confirmation email. POST The email address of the user that needs to 
POST {{ApiTemplate.API_HostAddress}}/resendConfirmationEmail
Content-Type: application/json

{
  "email": "test1@ApiTemplate.site"
}


### User fotgot their password. POST their email and to send them a recovery email.
### IMPORTANT: A user must have 'Confirmed' their email before doing a password forget/reset.
### IMPORTANT: Prior to sending this request call /api/v1/account/operations/recovery to see if the Email System is configured.
POST {{ApiTemplate.API_HostAddress}}/forgotPassword
Content-Type: application/json

{
  "email": "test1@ApiTemplate.site"
}

### Received an email with the 'ResetCode' Send the reset code, their current Email address, and the new password.
POST {{ApiTemplate.API_HostAddress}}/resetpassword
Content-Type: application/json

{
  "email": "test1@ApiTemplate.site",
  "resetCode": "Q2ZESjhLZ2hIR0p5S0FGTWdoYW0wVWxSeCtIZ05INUZBQ01nTDJSVWQvSVo3cUpWZ3ByTitXbUs5a1pYaEZvUDlWeFRIVUJ1dTJvamswb1djVDNjM2pWSWtONEVYTS94djZ5dW4wb1ZXNnNzZmlRRUJhdG9oS1d0MFNtR0lab2NtRnF3RG9qZjZNQWFXRWM1bDdnUjROaEJXNDcvQUd0MmNXRDRMT3g2NzBRZ242VFIxZHNRZ09KQ0RyQXVKTGJFR2U0K1RoVVp1ZUZWSC9mZnNCMGpXZkJ5bzhjUUR4bFc1Sm82OEwxR1ViV2ZvSlA4",
  "newPassword": "TestPassword@123"
}


### Get the current user's Email and info.
GET {{ApiTemplate.API_HostAddress}}/manage/info
Content-Type: application/json



### Allow the current user to change their password. 
POST {{ApiTemplate.API_HostAddress}}/manage/info
Content-Type: application/json

{
  "email": "test1@ApiTemplate.site",
  "oldPassword": "TestPassword@123",
  "newPassword": "TestPassword@1"
}



### 2FA Setup: Step 1: Send an enable request. You will get something like this:
# {
#   "sharedKey": "5LAQCAKE6KBFQSF6BMSDNYDE7RZAZZGD",
#   "recoveryCodesLeft": 0,
#   "recoveryCodes": null,
#   "isTwoFactorEnabled": false,
#   "isMachineRemembered": false
# }
POST {{ApiTemplate.API_HostAddress}}/manage/2fa
Content-Type: application/json

{

}


### 2FA Setup: Step 2: Add the Shared Key to your Authenticator App manually
### OR
### Generate a QR code that can be scanned (This is C# - adjust for TypeScript): 
# string authenticatorUriFormat = "otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6";

# var qrContent = string.Format(
#                     authenticatorUriFormat,
#                     "ApiTemplate",
#                     CurrentEmail,
#                     code);

# QRCodeGenerator qrGenerator = new QRCodeGenerator();
# QRCodeData qrCodeData = qrGenerator.CreateQrCode(qrContent, QRCodeGenerator.ECCLevel.H);

# PngByteQRCode qrCode = new PngByteQRCode(qrCodeData);
# var qrCodeAsPng = qrCode.GetGraphic(10);
# string QrUri = string.Format("data:image/png;base64,{0}", Convert.ToBase64String(qrCodeAsPng));



### 2FA Setup: Step 3: Use the newly-configured Authenticator App to get the current validation code and send it back to the API:
### This will give you a response. The use can use these codes for 2FA:
### {
#   "sharedKey": "5LAQCAKE6KBFQSF6BMSDNYDE7RZAZZGD",
#   "recoveryCodesLeft": 10,
#   "recoveryCodes": [
#     "YDBHP-2JJR8",
#     "RRQR4-B8DGG",
#     "JHG7D-7325K",
#     "JWTRM-PVD6M",
#     "8TT7R-6VQQG",
#     "89386-226MH",
#     "CXWB6-KJ33D",
#     "4JNPF-DHT7X",
#     "TCK8C-PG9G7",
#     "7QXXG-FR6DJ"
#   ],
#   "isTwoFactorEnabled": true,
#   "isMachineRemembered": false
#### }
POST {{ApiTemplate.API_HostAddress}}/manage/2fa
Content-Type: application/json

{
  "enable": true,
  "twoFactorCode": "433937"
}


### 2FA Setup: Step 4: Calling /api/v1/accoun/2fa will tell you if the 2fa is enabled


### 2FA Setup: Step 5: Login. Refer to login requests up above, but now you need to pass the 2fa code from the authenticator app.
### If a 2fa-enabled user attempts to sign in without their 2fa code, they will get a 401 response, and the "detail" will say: "RequiresTwoFactor"
POST {{ApiTemplate.API_HostAddress}}/login?useCookies=true&useSessionCookies=true
Content-Type: application/json

{
  "email": "test1@ApiTemplate.site",
  "password": "TestPassword@1",
  "twoFactorCode": "033306"
}


### 2FA: Use a recovery 2FA code:
POST {{ApiTemplate.API_HostAddress}}/login?useCookies=true&useSessionCookies=true
Content-Type: application/json

{
  "email": "test1@ApiTemplate.site",
  "password": "TestPassword@1",
  "twoFactorRecoveryCode": "YDBHP-2JJR8"
}



### 2FA: Disable 2FA
POST {{ApiTemplate.API_HostAddress}}/manage/2fa
Content-Type: application/json

{
  "enable": false
}

###
################################## SUPPLEMENTAL IDENTITY METHODS

### Logout
GET {{ApiTemplate.API_HostAddress}}/api/v1/account/logout
Content-Type: application/json

### Delete Current Account
DELETE {{ApiTemplate.API_HostAddress}}/api/v1/account
Content-Type: application/json

### Does Account Exist
POST {{ApiTemplate.API_HostAddress}}/api/v1/account/exists
Content-Type: application/json

{
  "email": "test4@ApiTemplate.site"
}

### Check to see if account recovery operations are allowed - reviews a valid Email System integration (SendGrid API).
GET {{ApiTemplate.API_HostAddress}}/api/v1/account/operations/recovery
Content-Type: application/json


### Get current user roles.
GET {{ApiTemplate.API_HostAddress}}/api/v1/account/roles
Content-Type: application/json


### Check if current user has 2FA enabled
GET {{ApiTemplate.API_HostAddress}}/api/v1/account/2fa
Content-Type: application/json


### Administrator: Toggle the user as an administrator or disable.
GET {{ApiTemplate.API_HostAddress}}/api/v1/user/ce447eb3-ab61-4c36-83e2-840d0c3435e2/role/administrator
Content-Type: application/json


### Administrator: Delete user by Id
DELETE {{ApiTemplate.API_HostAddress}}/api/v1/user/ce447eb3-ab61-4c36-83e2-840d0c3435e2
Content-Type: application/json


### Administrator: Update system settings with SendGrid email config
### TODO: Setup your own SendGrid account and add your SendGrid key and the email address you will use to send emails from the system.
PUT {{ApiTemplate.API_HostAddress}}/api/v1/settings
Content-Type: application/json

{
  "sendGridKey": "YOUR_SENDGRID_API_KEY_HERE",
  "sendGridSystemEmailAddress": "system@ApiTemplate.site"
}


### Administrator: Update just the System Email Address.
PUT {{ApiTemplate.API_HostAddress}}/api/v1/settings
Content-Type: application/json

{
  "sendGridKey": "--- NOT DISPLAYED FOR SECURITY ---",
  "sendGridSystemEmailAddress": "system1@ApiTemplate.site"
}


### Administrator: Update just the System Email Address.
PUT {{ApiTemplate.API_HostAddress}}/api/v1/settings
Content-Type: application/json

{
  "sendGridKey": "",
  "sendGridSystemEmailAddress": "system2@ApiTemplate.site"
}


### Administrator: Clear system settings by passing null.
PUT {{ApiTemplate.API_HostAddress}}/api/v1/settings
Content-Type: application/json

{
  "sendGridKey": null,
  "sendGridSystemEmailAddress": null
}


### Administrator: Get the current system settings, useful for a page that would mange system settings.
GET {{ApiTemplate.API_HostAddress}}/api/v1/settings
Content-Type: application/json


### Administrator: Search Users
POST {{ApiTemplate.API_HostAddress}}/api/v1/users
Content-Type: application/json

{
  "filterText": null,
  "pageNumber": 0,
  "pageSize": 5,
  "sortBy": "string",
  "sortDirection": 1
}










###
################################## CUSTOMER METHODS
# NOTE: You must be logged in (authenticated) to use customer endpoints
# 1. First register a user account using the register endpoint below
# 2. Then login using the login endpoint to get authentication cookies
# 3. Replace REPLACE_WITH_CUSTOMER_ID with actual customer IDs from API responses
# 4. Gender values: 0 = Unknown, 1 = Male, 2 = Female
# 5. SortDirection values: 0 = Ascending, 1 = Descending

### Create a new Customer
POST {{ApiTemplate.API_HostAddress}}/api/v1/customer
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john.doe@example.com",
  "phone": "555-123-4567",
  "birthDate": "1990-01-15T00:00:00.000Z",
  "address": "123 Main St",
  "city": "Anytown",
  "state": "CA",
  "postal": "12345",
  "notes": "This is a test customer",
  "imageBase64": "",
  "active": true,
  "gender": 1
}

### Get Customer by ID (replace {customerId} with actual ID from create response)
GET {{ApiTemplate.API_HostAddress}}/api/v1/customer/43adadd0-dca8-49ee-8729-a057f94dc050
Accept: application/json

### Update Customer by ID (replace {customerId} with actual ID)
PUT {{ApiTemplate.API_HostAddress}}/api/v1/customer/43adadd0-dca8-49ee-8729-a057f94dc050
Content-Type: application/json

{
  "name": "John Doe Updated",
  "email": "john.doe.updated@example.com",
  "phone": "555-987-6543",
  "birthDate": "1990-01-15T00:00:00.000Z",
  "address": "456 Oak Avenue",
  "city": "New City",
  "state": "NY",
  "postal": "54321",
  "notes": "Updated customer information",
  "imageBase64": "",
  "active": true,
  "gender": 1
}

### Delete Customer by ID (replace {customerId} with actual ID)
DELETE {{ApiTemplate.API_HostAddress}}/api/v1/customer/43adadd0-dca8-49ee-8729-a057f94dc050
Accept: application/json

### Search Customers with filtering
POST {{ApiTemplate.API_HostAddress}}/api/v1/customers
Content-Type: application/json

{
  "filterText": "john",
  "pageNumber": 0,
  "pageSize": 10,
  "sortBy": "Name",
  "sortDirection": 0
}

### Search Customers - Get all customers (no filter)
POST {{ApiTemplate.API_HostAddress}}/api/v1/customers
Content-Type: application/json

{
  "filterText": null,
  "pageNumber": 0,
  "pageSize": 15,
  "sortBy": "Name",
  "sortDirection": 0
}

### Search Customers - Sort by State descending
POST {{ApiTemplate.API_HostAddress}}/api/v1/customers
Content-Type: application/json

{
  "filterText": null,
  "pageNumber": 0,
  "pageSize": 15,
  "sortBy": "State",
  "sortDirection": 1
}

### Search Customers - Sort by Gender ascending
POST {{ApiTemplate.API_HostAddress}}/api/v1/customers
Content-Type: application/json

{
  "filterText": null,
  "pageNumber": 0,
  "pageSize": 15,
  "sortBy": "Gender",
  "sortDirection": 0
}

### Search Customers - Sort by Active status
POST {{ApiTemplate.API_HostAddress}}/api/v1/customers
Content-Type: application/json

{
  "filterText": null,
  "pageNumber": 0,
  "pageSize": 15,
  "sortBy": "Active",
  "sortDirection": 1
}

### Seed Customers with specific number
GET {{ApiTemplate.API_HostAddress}}/api/v1/seed/customers/10
Accept: application/json
